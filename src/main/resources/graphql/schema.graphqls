scalar LocalDateTime

type Query {

    #User
    getUserById(id: ID): UserResponse
    getAllUsers: [UserResponse]

    #Course
    getCourseById(id: ID): CourseResponse
    getAllCourses: [CourseResponse]

    #Enrollment
    getAllMyEnrollments: [EnrollmentResponse]
    getEnrolledUsers(courseId: ID): [UserResponse]

    #Module
    getModuleById(id: ID): ModuleResponse
    getAllModules(courseId: ID): [ModuleResponse]

    #Lesson
    getLessonById(id: ID): LessonResponse
    getAllLessons(moduleId: ID): [LessonResponse]

}

type Mutation {

    #Auth
    register(userRegisterRequest: UserRegisterRequest): JwtResponse
    login(jwtRequest: JwtRequest): JwtResponse
    refresh(refreshTokenRequest: RefreshTokenRequest): JwtResponse

    #User
    updateUser(id:ID, userUpdateRequest: UserUpdateRequest): UserResponse
    deleteUser(id: ID): Boolean

    #Course
    createCourse(courseCreateRequest: CourseCreateRequest): CourseResponse
    updateCourse(id: ID, courseUpdateRequest: CourseUpdateRequest): CourseResponse
    deleteCourse(id: ID): Boolean

    #Enrollment
    createEnrollment(courseId: ID): EnrollmentResponse
    deleteEnrollment(courseId: ID): Boolean

    #Module
    createModule(courseId: ID, moduleCreateRequest: ModuleCreateRequest): ModuleResponse
    updateModule(id: ID, moduleUpdateRequest: ModuleUpdateRequest): ModuleResponse
    deleteModule(id: ID): Boolean

    #Lesson
    createLesson(moduleId: ID, lessonCreateRequest: LessonCreateRequest): LessonResponse
    updateLesson(id: ID, lessonUpdateRequest: LessonUpdateRequest): LessonResponse
    deleteLesson(id: ID): Boolean
    uploadVideo(id: ID, video: LessonVideo): Boolean

}